class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int res=0;
       for(int i=0;i<nums.size();i++)
           res=res^nums[i];
    return res;
    }
};

Binary Search Solution:

class Solution {
public:
   int singleNonDuplicate(vector<int>& nums) {
        int low = 0, high = nums.size() - 2; 
        while(low <= high) {
            int mid = (low + high) >> 1; 
            if(nums[mid] == nums[mid^1])                       /**************mid^1 will go to next even index if mid is odd and vice versa*****************/
            {
                low = mid + 1; 
            } 
            else {
                high = mid - 1; 
            }
        }
        return nums[low]; 
    }
};
